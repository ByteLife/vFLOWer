<?xml version="1.0" encoding="UTF-8"?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="11207259-fa62-4b75-83f7-d1e65ddc642e" version="0.0.3" api-version="3.1.0" allowed-operations="fve" restartMode="1" resumeFromFailedMode="0">
    <display-name>Edit script configuration</display-name>

    <position x="100.0" y="50.0"/>

    <input>
        <param name="scriptConfigurationName" type="string"/>
        <param name="scriptType" type="string"/>
        <param name="scriptContent" type="string">
            <description>The command or script to start</description>
        </param>
        <param name="scriptTimeOut" type="number"/>
        <param name="scriptRefreshTime" type="number"/>
        <param name="scriptInteractiveSession" type="boolean"/>
        <param name="scriptWorkingDirectory" type="string"/>
        <param name="copyResource" type="boolean"/>
        <param name="resourceToCopy" type="ResourceElement"/>
        <param name="resourceSearchReplace" type="boolean"/>
        <param name="deleteResourceAfterRun" type="boolean"/>
    </input>

    <attrib name="resourceElementCategory" type="ResourceElementCategory" read-only="false">
        <value encoded="n">__NULL__</value>
    </attrib>
    <attrib name="scriptConfigurationResourceElement" type="ResourceElement" read-only="false">
        <value encoded="n">dunes://service.dunes.ch/ResourceElement?id='b0004f79-cdbf-4890-a3fd-f86b438da9f1'&amp;dunesName='ResourceElement'</value>
    </attrib>
    <attrib name="scriptConfiguration" type="Properties" read-only="false">
        <value encoded="n">__NULL__</value>
    </attrib>
    <attrib name="additionalResource" type="ResourceElement" read-only="false">
        <value encoded="n">dunes://service.dunes.ch/ResourceElement?id='89d6fb06-0a2f-4f17-8c32-baaa6d6ab365'&amp;dunesName='ResourceElement'</value>
    </attrib>

    <workflow-item name="item0" type="end" end-mode="0">
        <position x="804.5" y="45.40909090909091"/>
    </workflow-item>

    <workflow-item name="item1" out-name="item4" type="task">
        <display-name>Add new script config</display-name>

        <script encoded="false">
var scriptConfiguration = new Properties();
scriptConfiguration.put("scriptType", scriptType);
scriptConfiguration.put("scriptContent", scriptContent);
scriptConfiguration.put("scriptTimeOut", scriptTimeOut);
scriptConfiguration.put("scriptRefreshTime", scriptRefreshTime);
scriptConfiguration.put("scriptInteractiveSession", scriptInteractiveSession);
scriptConfiguration.put("scriptWorkingDirectory", scriptWorkingDirectory);
scriptConfiguration.put("copyResource", copyResource);
scriptConfiguration.put("resourceToCopy", resourceToCopy);
scriptConfiguration.put("deleteResourceAfterRun", deleteResourceAfterRun);
scriptConfiguration.put("resourceSearchReplace", resourceSearchReplace);
        </script>

        <in-binding>
            <bind name="scriptType" type="string" export-name="scriptType"/>
            <bind name="scriptContent" type="string" export-name="scriptContent"/>
            <bind name="scriptTimeOut" type="number" export-name="scriptTimeOut"/>
            <bind name="scriptInteractiveSession" type="boolean" export-name="scriptInteractiveSession"/>
            <bind name="scriptWorkingDirectory" type="string" export-name="scriptWorkingDirectory"/>
            <bind name="copyResource" type="boolean" export-name="copyResource"/>
            <bind name="resourceToCopy" type="ResourceElement" export-name="resourceToCopy"/>
            <bind name="resourceSearchReplace" type="boolean" export-name="resourceSearchReplace"/>
            <bind name="deleteResourceAfterRun" type="boolean" export-name="deleteResourceAfterRun"/>
            <bind name="scriptRefreshTime" type="number" export-name="scriptRefreshTime"/>
        </in-binding>

        <out-binding>
            <bind name="scriptConfiguration" type="Properties" export-name="scriptConfiguration"/>
        </out-binding>

        <position x="204.5" y="55.40909090909091"/>
    </workflow-item>

    <workflow-item name="item2" out-name="item0" type="task" script-module="com.vmware.coe.library.resourceElements/setResourceElementAttributesFromProperties">
        <display-name>setResourceElementAttributesFromProperties</display-name>

        <script encoded="false">
//Auto generated script, cannot be modified !
System.getModule("com.vmware.coe.library.resourceElements").setResourceElementAttributesFromProperties(resourceElement,prop) ;
        </script>

        <in-binding>
            <bind name="resourceElement" type="ResourceElement" export-name="scriptConfigurationResourceElement"/>
            <bind name="prop" type="Properties" export-name="scriptConfiguration"/>
        </in-binding>

        <out-binding/>

        <position x="624.5" y="55.40909090909091"/>
    </workflow-item>

    <workflow-item name="item3" out-name="item2" type="task" script-module="com.vmware.coe.library.resourceElements/getOrCreateResourceElement">
        <display-name>getOrCreateResourceElement</display-name>

        <script encoded="false">
//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.coe.library.resourceElements").getOrCreateResourceElement(resourceElementCategory,name) ;
        </script>

        <in-binding>
            <bind name="resourceElementCategory" type="ResourceElementCategory" export-name="resourceElementCategory">
                <description>Where to look for resource elements or create them</description>
            </bind>
            <bind name="name" type="string" export-name="scriptConfigurationName">
                <description>The name of the resource element to get or create</description>
            </bind>
        </in-binding>

        <out-binding>
            <bind name="actionResult" type="ResourceElement" export-name="scriptConfigurationResourceElement"/>
        </out-binding>

        <description>Get a configuration element by name. If it is not found create an empty resource element</description>

        <position x="484.5" y="55.40909090909091"/>
    </workflow-item>

    <workflow-item name="item4" out-name="item3" type="task">
        <display-name>Get resource element category</display-name>

        <script encoded="false">
resourceElementCategory = scriptConfigurationResourceElement.getResourceElementCategory();
        </script>

        <in-binding>
            <bind name="scriptConfigurationResourceElement" type="ResourceElement" export-name="scriptConfigurationResourceElement"/>
        </in-binding>

        <out-binding>
            <bind name="resourceElementCategory" type="ResourceElementCategory" export-name="resourceElementCategory"/>
        </out-binding>

        <position x="344.5" y="55.40909090909091"/>
    </workflow-item>

    <presentation>
        <p-step>
            <title>Script configuration</title>
            <p-group>
                <title>Configurations</title>
                <p-param name="scriptConfigurationName">
                    <desc>Configuration name</desc>
                    <p-qual kind="static" name="mandatory" type="boolean">true</p-qual>
                    <p-qual kind="ognl" name="linkedEnumeration" type="Array/string">GetAction("com.vmware.coe.library.resourceElements","getOtherResourceElementNames").call( #scriptConfigurationResourceElement )</p-qual>
                </p-param>
            </p-group>
            <p-group>
                <title>Script</title>
                <p-param name="scriptType">
                    <desc>Script Type (bash, batch, powershell)</desc>
                    <p-qual kind="static" name="mandatory" type="boolean">true</p-qual>
                    <p-qual kind="static" name="genericEnumeration" type="Array/string">#{#string#batch#;#string#bash#;#string#powershell#}#</p-qual>
                    <p-qual kind="ognl" name="dataBinding" type="string">GetAction("com.vmware.coe.library.resourceElements","getResourceElementAttributeWithKeyByResourceElementName").call( #scriptConfigurationResourceElement , #scriptConfigurationName , "scriptType" )</p-qual>
                </p-param>
                <p-param name="scriptContent">
                    <desc>Script content</desc>
                    <p-qual kind="static" name="mandatory" type="boolean">true</p-qual>
                    <p-qual kind="static" name="textInput" type="void">__NULL__</p-qual>
                    <p-qual kind="ognl" name="dataBinding" type="string">GetAction("com.vmware.coe.library.resourceElements","getResourceElementAttributeWithKeyByResourceElementName").call( #scriptConfigurationResourceElement , #scriptConfigurationName , "scriptContent" )</p-qual>
                </p-param>
                <p-param name="scriptTimeOut">
                    <desc>Timeout for the running script (in second)</desc>
                    <p-qual kind="static" name="mandatory" type="boolean">true</p-qual>
                    <p-qual kind="ognl" name="dataBinding" type="number">GetAction("com.vmware.coe.library.resourceElements","getResourceElementAttributeWithKeyByResourceElementName").call( #scriptConfigurationResourceElement , #scriptConfigurationName , "scriptTimeOut" )</p-qual>
                </p-param>
                <p-param name="scriptRefreshTime">
                    <desc>Time in second for refreshing the script status</desc>
                    <p-qual kind="ognl" name="dataBinding" type="number">GetAction("com.vmware.coe.library.resourceElements","getResourceElementAttributeWithKeyByResourceElementName").call( #scriptConfigurationResourceElement , #scriptConfigurationName , "scriptRefreshTime" )</p-qual>
                </p-param>
                <p-param name="scriptInteractiveSession">
                    <desc>Script context interactivity</desc>
                    <p-qual kind="ognl" name="dataBinding" type="boolean">GetAction("com.vmware.coe.library.resourceElements","getResourceElementAttributeWithKeyByResourceElementName").call( #scriptConfigurationResourceElement , #scriptConfigurationName , "scriptInteractiveSession" )</p-qual>
                </p-param>
                <p-param name="scriptWorkingDirectory">
                    <desc>(optional) Script working directory in the guest</desc>
                    <p-qual kind="ognl" name="dataBinding" type="string">GetAction("com.vmware.coe.library.resourceElements","getResourceElementAttributeWithKeyByResourceElementName").call( #scriptConfigurationResourceElement , #scriptConfigurationName , "scriptWorkingDirectory" )</p-qual>
                </p-param>
                <p-param name="copyResource">
                    <desc>Copy a file in the guest</desc>
                    <p-qual kind="ognl" name="dataBinding" type="boolean">GetAction("com.vmware.coe.library.resourceElements","getResourceElementAttributeWithKeyByResourceElementName").call( #scriptConfigurationResourceElement , #scriptConfigurationName , "copyResource" )</p-qual>
                </p-param>
            </p-group>
            <p-group>
                <title>Resource to copy</title>
                <p-qual kind="ognl" name="visible" type="boolean">#copyResource</p-qual>
                <p-param name="resourceToCopy">
                    <desc>File to copy</desc>
                    <p-qual kind="ognl" name="linkedEnumeration" type="Array/ResourceElement">GetAction("com.vmware.coe.library.resourceElements","getOtherResourceElements").call( #additionalResource )</p-qual>
                    <p-qual kind="ognl" name="dataBinding" type="ResourceElement">GetAction("com.vmware.coe.library.resourceElements","getResourceElementAttributeWithKeyByResourceElementName").call( #scriptConfigurationResourceElement , #scriptConfigurationName , "resourceToCopy" )</p-qual>
                </p-param>
                <p-param name="resourceSearchReplace">
                    <desc>Perform replacement of variables in the file</desc>
                    <p-qual kind="ognl" name="dataBinding" type="boolean">GetAction("com.vmware.coe.library.resourceElements","getResourceElementAttributeWithKeyByResourceElementName").call( #scriptConfigurationResourceElement , #scriptConfigurationName , "resourceSearchReplace" )</p-qual>
                </p-param>
                <p-param name="deleteResourceAfterRun">
                    <desc>Delete file after running the script</desc>
                    <p-qual kind="ognl" name="dataBinding" type="boolean">GetAction("com.vmware.coe.library.resourceElements","getResourceElementAttributeWithKeyByResourceElementName").call( #scriptConfigurationResourceElement , #scriptConfigurationName , "deleteResourceAfterRun" )</p-qual>
                </p-param>
            </p-group>
        </p-step>
    </presentation>
</workflow>
